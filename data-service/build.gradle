apply plugin: 'uk.gov.laa.ccms.springboot.laa-ccms-spring-boot-gradle-plugin'

dependencies {
    implementation project(':data-api')

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Enable access token authentication
    implementation 'uk.gov.laa.ccms.springboot:laa-ccms-spring-boot-starter-auth'

    //Enable Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    implementation files('lib/ojdbc8.jar')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'

    //Used for integration tests
    implementation platform('org.testcontainers:testcontainers-bom:1.20.4')
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:oracle-xe'
    testImplementation 'org.hibernate:hibernate-core:6.6.3.Final'
    testImplementation 'com.h2database:h2:2.3.232'
}

test {
    useJUnitPlatform()

    // Hide warning for dynamic loading of agents https://github.com/mockito/mockito/issues/3037
    jvmArgs '-XX:+EnableDynamicAgentLoading'
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/DataApplication.class'])
        }))
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/DataApplication.class'])
        }))
    }
}
