openapi: '3.0.0'
info:
  title: 'laa-ccms-data-api'
  version: '1.0.0'
paths:
  /users/{login-id}:
    get:
      tags:
        - users
      summary: 'Get User'
      operationId: 'getUser'
      parameters:
        - name: 'login-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /users:
    get:
      tags:
        - users
      summary: 'Get Users'
      operationId: 'getUsers'
      x-spring-paginated: true
      parameters:
        - name: 'provider-id'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            example: '123'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /users/{login-id}/notifications/summary:
    get:
      tags:
        - notifications
      summary: 'Get User Notification Summary'
      operationId: 'getUserNotificationSummary'
      parameters:
        - name: 'login-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationSummary"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /providers/{provider-id}:
    get:
      tags:
        - providers
      summary: 'Get Provider'
      operationId: 'getProvider'
      x-spring-paginated: false
      parameters:
        - name: 'provider-id'
          in: 'path'
          required: true
          schema:
            type: 'integer'
            example: 12345
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/providerDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /proceedings:
    get:
      tags:
        - proceedings
      summary: 'Get Proceedings'
      operationId: 'getProceedings'
      x-spring-paginated: true
      parameters:
        - name: 'category-of-law'
          in: 'query'
          schema:
            type: 'string'
            example: 'CAT1'
        - name: 'matter-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'amendment-only'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'enabled'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'lead'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'application-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'lar-scope-flag'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proceedingDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /proceedings/{proceeding-code}:
    get:
      tags:
        - proceedings
      summary: 'Get Proceeding'
      operationId: 'getProceeding'
      x-spring-paginated: false
      parameters:
        - name: 'proceeding-code'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: "TAA01"
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proceedingDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /scope-limitations:
    get:
      tags:
        - scopelimitations
      summary: 'Get Scope Limitations'
      operationId: 'getScopeLimitations'
      x-spring-paginated: true
      parameters:
        - name: 'scope-limitations'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'category-of-law'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'matter-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'proceeding-code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'level-of-service'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'default-wording'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'stage'
          in: 'query'
          schema:
            type: 'integer'
            example: '1'
        - name: 'cost-limitation'
          in: 'query'
          schema:
            type: 'number'
            example: '53.50'
        - name: 'emergency-cost-limitation'
          in: 'query'
          schema:
            type: 'number'
            example: '53.50'
        - name: 'non-standard-wording'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'emergency-scope-default'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'emergency'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'default-code'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'scope-default'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/scopeLimitationDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /prior-authority-types:
    get:
      tags:
        - priorAuthorityTypes
      summary: 'Get Prior Authority Types'
      operationId: 'getPriorAuthorityTypes'
      x-spring-paginated: true
      parameters:
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'value-required'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/priorAuthorityTypeDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/amendment-types:
    get:
      tags:
        - lookup
      summary: 'Get Amendment Type Lookup Values'
      operationId: 'getAmendmentTypeLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'application-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/amendmentTypeLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/countries:
    get:
      tags:
        - lookup
      summary: 'Get Countries Lookup Values'
      operationId: 'getCountriesLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commonLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /cases:
    get:
      tags:
        - cases
      summary: 'Get Cases'
      operationId: 'getCases'
      x-spring-paginated: true
      parameters:
        - name: 'provider-id'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
            example: '123456789'
        - name: 'case-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'provider-case-reference'
          in: 'query'
          schema:
            type: 'string'
            example: "1234567890"
        - name: 'case-status'
          in: 'query'
          schema:
            type: 'string'
            example: 'APPL'
        - name: 'client-surname'
          in: 'query'
          schema:
            type: 'string'
            example: 'smith'
        - name: 'fee-earner-id'
          in: 'query'
          schema:
            type: 'integer'
            format: 'int64'
            example: 1234567890
        - name: 'office-id'
          in: 'query'
          schema:
            type: 'integer'
            format: 'int64'
            example: 1234567890
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /cases/status/{transaction-request-id}:
    get:
      tags:
        - cases
      summary: 'Get Case transaction status'
      operationId: 'getCaseTransactionStatus'
      parameters:
        - name: 'transaction-request-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transactionStatus"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/case-status:
    get:
      tags:
        - lookup
      summary: 'Get Case Status Lookup Values'
      operationId: 'getCaseStatusLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'copy-allowed'
          in: 'query'
          schema:
            type: 'boolean'
            example: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseStatusLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/outcome-results:
    get:
      tags:
        - lookup
      summary: 'Get Outcome Result Lookup Values'
      operationId: 'getOutcomeResultLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'proceeding-code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'outcome-result'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/outcomeResultLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/stage-ends:
    get:
      tags:
        - lookup
      summary: 'Get Stage End Lookup Values'
      operationId: 'getStageEndLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'proceeding-code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'stage-end'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/stageEndLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/award-types:
    get:
      tags:
        - lookup
      summary: 'Get Award Type Lookup Values'
      operationId: 'getAwardTypeLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'award-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/awardTypeLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/person-to-case-relationships:
    get:
      tags:
        - lookup
      summary: 'Get person to case relationship lookup values'
      operationId: 'getPersonToCaseRelationshipLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'AGENT'
        - name: 'description'
          in: 'query'
          schema:
            type: 'string'
            example: 'Agent'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/relationshipToCaseLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/organisation-to-case-relationships:
    get:
      tags:
        - lookup
      summary: 'Get organisation to case relationship lookup values'
      operationId: 'getOrganisationToCaseRelationshipLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'AGENT'
        - name: 'description'
          in: 'query'
          schema:
            type: 'string'
            example: 'Agent'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/relationshipToCaseLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/categories-of-law:
    get:
      tags:
        - lookup
      summary: 'Get Category Of Law Lookup Values'
      operationId: 'getCategoryOfLawLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'matter-type-description'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'copy-cost-limit'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categoryOfLawLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/matter-types:
    get:
      tags:
        - lookup
      summary: 'Get Matter Type Lookup Values'
      operationId: 'getMatterTypeLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'description'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'matter-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'category-of-law'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/matterTypeLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/level-of-service:
    get:
      tags:
        - lookup
      summary: 'Get Level of service Lookup Values'
      operationId: 'getLevelOfServiceLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'proceeding-code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'matter-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'category-of-law'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/levelOfServiceLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/proceeding-client-involvement-types:
    get:
      tags:
        - lookup
      summary: 'Get Proceeding client involvement type lookup values'
      operationId: 'getProceedingClientInvolvementTypeLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'proceeding-code'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
        - name: 'client-involvement-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'ABC'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientInvolvementTypeLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/evidence-document-types:
    get:
      tags:
        - lookup
      summary: 'Get a list of evidence document type lookup values'
      description: Get a list of evidence document type lookup values which match the provided type 
        and code.
      operationId: 'getEvidenceDocumentTypeLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'type'
          in: 'query'
          schema:
            type: 'string'
            example: 'XXCCMS_OPA_EVIDENCE_ITEMS'
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'D'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/evidenceDocumentTypeLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/provider-request-types:
    get:
      tags:
        - lookup
      summary: 'Get a provider request type lookup values'
      description: Get a provider request type lookup values 
      operationId: 'getProviderRequestTypeLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'is-case-related'
          in: 'query'
          schema:
            type: 'boolean'
            example: 'true'
        - name: 'type'
          in: 'query'
          schema:
            type: 'string'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/providerRequestTypeLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/common:
    get:
      tags:
        - lookup
      summary: 'Get a list of common lookup values'
      description: Get a list of common lookup values which match the provided type, code and
        description.
        Include a '*' at the beginning and/or end of query params to perform a wildcard
        search.
      operationId: 'getCommonLookupValues'
      x-spring-paginated: true
      parameters:
        - name: 'type'
          in: 'query'
          schema:
            type: 'string'
            example: 'CONTACT_TITLE'
        - name: 'code'
          in: 'query'
          schema:
            type: 'string'
            example: 'D'
        - name: 'description'
          in: 'query'
          schema:
            type: 'string'
            example: 'abc'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commonLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/assessment-summary-attributes:
    get:
      tags:
        - lookup
      summary: 'Get a list of assessment summary attributes'
      description: get a list of assessment summary attributes
      operationId: 'getAssessmentSummaryAttributes'
      x-spring-paginated: true
      parameters:
        - name: 'summary-type'
          in: 'query'
          schema:
            type: 'string'
            enum:
              - 'parent'
              - 'child'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assessmentSummaryEntityLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /lookup/declarations:
    get:
      tags:
        - lookup
      summary: 'Get a list of declarations'
      description: get a list of declarations
      operationId: 'getDeclarations'
      x-spring-paginated: true
      parameters:
        - name: 'type'
          in: 'query'
          schema:
            type: 'string'
        - name: 'bill-type'
          in: 'query'
          schema:
            type: 'string'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/declarationLookupDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /case-reference:
    post:
      tags:
        - case-reference
      summary: 'Get the next available case reference number'
      description: get the next available case reference number
      operationId: postCaseReference
      responses:
        '201':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseReferenceSummary"
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal server error'
  /clients:
    get:
      tags:
        - clients
      summary: 'Get Clients'
      operationId: 'getClients'
      x-spring-paginated: true
      parameters:
        - name: 'first-name'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: 'john'
        - name: 'surname'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: 'smith'
        - name: 'date-of-birth'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: "2017-01-01"
            format: date
        - name: 'gender'
          in: 'query'
          schema:
            type: 'string'
            example: 'Male'
        - name: 'client-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'home-office-reference'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'national-insurance-number'
          in: 'query'
          schema:
            type: 'string'
            example: 'AB123456C'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /clients/status/{transaction-request-id}:
    get:
      tags:
        - clients
      summary: 'Get Client transaction status'
      operationId: 'getClientTransactionStatus'
      parameters:
        - name: 'transaction-request-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transactionStatus"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /notifications:
    get:
      tags:
        - notifications
      summary: 'Get Notifications'
      operationId: 'getNotifications'
      x-spring-paginated: true
      parameters:
        - name: 'provider-id'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
          example: '123456789'
        - name: 'case-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'provider-case-reference'
          in: 'query'
          schema:
            type: 'string'
            example: "1234567890"
        - name: 'assigned-to-user-id'
          in: 'query'
          schema:
            type: 'string'
            example: 'abc123'
        - name: 'client-surname'
          in: 'query'
          schema:
            type: 'string'
            example: 'smith'
        - name: 'fee-earner-id'
          in: 'query'
          schema:
            type: 'integer'
            example: 1234567890
        - name: 'include-closed'
          in: 'query'
          schema:
            type: boolean
            default: true
        - name: 'notification-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'A'
        - name: 'date-from'
          in: 'query'
          schema:
            type: 'string'
            example: "2017-01-01"
            format: date
        - name: 'date-to'
          in: 'query'
          schema:
            type: 'string'
            example: "2017-01-01"
            format: date
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notifications"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /notifications/{notification-id}:
    get:
      tags:
        - notifications
      summary: 'Get Notification'
      operationId: 'getNotification'
      parameters:
        - name: 'notification-id'
          in: 'path'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
            example: '123456789'
        - name: 'user-id'
          in: 'query'
          required: true
          schema:
            type: 'string'
            example: '123456789'
        - name: 'provider-id'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            format: 'int64'
          example: '123456789'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notification"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    transactionStatus:
      type: 'object'
      properties:
        submission_status:
          type: 'string'
          example: 'success'
        reference_number:
          type: 'string'
          example: 'abc123'
    baseOffice:
      type: 'object'
      properties:
        id:
          type: 'integer'
        name:
          type: 'string'
    officeDetail:
      allOf:
        - $ref: "#/components/schemas/baseOffice"
      type: 'object'
      properties:
        fee_earners:
          type: 'array'
          items:
            $ref: '#/components/schemas/contactDetail'
    baseProvider:
      type: 'object'
      properties:
        id:
          type: 'integer'
        name:
          type: 'string'
        offices:
          type: 'array'
          items:
            $ref: "#/components/schemas/baseOffice"
        is_primary:
          type: 'boolean'
    providerDetail:
      allOf:
        - $ref: "#/components/schemas/baseProvider"
      type: 'object'
      properties:
        offices:
          type: 'array'
          items:
            $ref: "#/components/schemas/officeDetail"
        contact_names:
          type: 'array'
          items:
            $ref: "#/components/schemas/contactDetail"
    proceedingDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/proceedingDetail'
    proceedingDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
        name:
          type: 'string'
        description:
          type: 'string'
        category_of_law_code:
          type: 'string'
        stage_end_lov:
          type: 'string'
        outcome_result_lov:
          type: 'string'
        matter_type:
          type: 'string'
        amendment_only:
          type: 'boolean'
        enabled:
          type: 'boolean'
        order_type_required:
          type: 'boolean'
        lar_scope:
          type: 'string'
    baseUser:
      type: 'object'
      properties:
        user_id:
          type: 'integer'
        login_id:
          type: 'string'
        username:
          type: 'string'
        user_type:
          type: 'string'
    userDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/baseUser'
    userDetail:
      allOf:
        - $ref: "#/components/schemas/baseUser"
      type: 'object'
      properties:
        provider:
          $ref: "#/components/schemas/baseProvider"
        firms:
          type: 'array'
          items:
            $ref: "#/components/schemas/baseProvider"
        functions:
          type: 'array'
          items:
            type: 'string'
    notificationSummary:
      type: 'object'
      properties:
        notifications:
          type: 'integer'
        standard_actions:
          type: 'integer'
        overdue_actions:
          type: 'integer'
    contactDetail:
      type: 'object'
      properties:
        id:
          type: 'integer'
          example: 12345
        name:
          type: 'string'
          example: 'a name'
    amendmentTypeLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/amendmentTypeLookupValueDetail'
    amendmentTypeLookupValueDetail:
      type: 'object'
      properties:
        application_type_code:
          type: 'string'
          example: 'ABC'
        application_type_description:
          type: 'string'
          example: 'description'
        cost_limit_cap:
          type: 'string'
          example: '1350.00'
        devolved_powers_indicator:
          type: 'string'
          example: 'Y'
        default_lar_scope_flag:
          type: 'string'
          example: 'Y'
    caseStatusLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/caseStatusLookupValueDetail'
    caseStatusLookupValueDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
          example: 'ABC'
        description:
          type: 'string'
          example: 'a description'
        copyAllowed:
          type: 'boolean'
          example: true
    outcomeResultLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/outcomeResultLookupValueDetail'
    outcomeResultLookupValueDetail:
      type: 'object'
      properties:
        proceeding_code:
          type: 'string'
        outcome_result:
          type: 'string'
        outcome_result_description:
          type: 'string'
        outcome_result_lov:
          type: 'string'
        enabled:
          type: 'boolean'
    stageEndLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/stageEndLookupValueDetail'
    stageEndLookupValueDetail:
      type: 'object'
      properties:
        proceeding_code:
          type: 'string'
        stage_end:
          type: 'string'
        description:
          type: 'string'
        stage_end_lov:
          type: 'string'
        enabled:
          type: 'boolean'
    awardTypeLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/awardTypeLookupValueDetail'
    awardTypeLookupValueDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
        description:
          type: 'string'
        award_type:
          type: 'string'
        start_date_active:
          type: 'string'
        end_date_active:
          type: 'string'
        enabled:
          type: 'boolean'
    categoryOfLawLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/categoryOfLawLookupValueDetail'
    categoryOfLawLookupValueDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
        matter_type_description:
          type: 'string'
        copy_cost_limit:
          type: 'boolean'
    matterTypeLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/matterTypeLookupValueDetail'
    matterTypeLookupValueDetail:
      type: 'object'
      properties:
        matter_type:
          type: 'string'
        description:
          type: 'string'
        category_of_law_code:
          type: 'string'
    levelOfServiceLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/levelOfServiceLookupValueDetail'
    levelOfServiceLookupValueDetail:
      type: 'object'
      properties:
        proceeding_code:
          type: 'string'
        matter_type:
          type: 'string'
        description:
          type: 'string'
        category_of_law_code:
          type: 'string'
        level_of_service_code:
          type: 'string'
        default_code:
          type: 'string'
    clientDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: [ ]
          items:
            $ref: "#/components/schemas/clientSummary"
    clientSummary:
      allOf:
        - $ref: '#/components/schemas/baseClient'
      type: 'object'
      properties:
        surname_at_birth:
          type: 'string'
        full_name:
          type: 'string'
        date_of_birth:
          type: 'string'
          format: 'date'
        gender:
          type: 'string'
        postal_code:
          type: 'string'
        home_office_reference:
          type: 'string'
        national_insurance_number:
          type: 'string'
    baseClient:
      type: 'object'
      properties:
        client_reference_number:
          type: 'string'
        first_name:
          type: 'string'
        surname:
          type: 'string'
    clientInvolvementTypeLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/clientInvolvementTypeLookupValueDetail'
    clientInvolvementTypeLookupValueDetail:
      type: 'object'
      properties:
        proceeding_code:
          type: 'string'
        client_involvement_type:
          type: 'string'
        client_involvement_type_name:
          type: 'string'
    scopeLimitationDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/scopeLimitationDetail'
    scopeLimitationDetail:
      type: 'object'
      properties:
        scope_limitations:
          type: 'string'
        category_of_law:
          type: 'string'
        matter_type:
          type: 'string'
        proceeding_code:
          type: 'string'
        level_of_service:
          type: 'string'
        description:
          type: 'string'
        default_wording:
          type: 'string'
        stage:
          type: 'integer'
        cost_limitation:
          type: 'number'
        emergency_cost_limitation:
          type: 'number'
        non_standard_wording_required:
          type: 'boolean'
        emergency_scope_default:
          type: 'boolean'
        emergency:
          type: 'boolean'
        default_code:
          type: 'boolean'
        scope_default:
          type: 'boolean'
    priorAuthorityTypeDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: '#/components/schemas/priorAuthorityTypeDetail'
    priorAuthorityTypeDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
        description:
          type: 'string'
        value_required:
          type: 'boolean'
        priorAuthorities:
          type: 'array'
          items:
            $ref: '#/components/schemas/priorAuthorityDetail'
    priorAuthorityDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
        description:
          type: 'string'
        data_type:
          type: 'string'
        lov_code:
          type: 'string'
        mandatory_flag:
          type: 'boolean'
    evidenceDocumentTypeLookupValueDetail:
      type: 'object'
      properties:
        type:
          type: 'string'
        code:
          type: 'string'
        description:
          type: 'string'
        start_date_active:
          type: 'string'
        end_date_active:
          type: 'string'
    evidenceDocumentTypeLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: "#/components/schemas/evidenceDocumentTypeLookupValueDetail"
    caseDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: [ ]
          items:
            $ref: "#/components/schemas/caseSummary"
    caseSummary:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
        provider_case_reference_number:
          type: 'string'
        client:
          $ref: '#/components/schemas/baseClient'
        fee_earner_name:
          type: 'string'
        category_of_law:
          type: 'string'
        case_status_display:
          type: 'string'
    commonLookupValueDetail:
      type: 'object'
      properties:
        type:
          type: 'string'
        code:
          type: 'string'
        description:
          type: 'string'
        start_date_active:
          type: 'string'
        attribute11:
          type: 'string'
        attribute12:
          type: 'string'
        enabled:
          type: 'boolean'
        default_code:
          type: 'string'
    commonLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: [ ]
          items:
            $ref: "#/components/schemas/commonLookupValueDetail"
    relationshipToCaseLookupValueDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
        description:
          type: 'string'
        default_code:
          type: 'boolean'
        opponent_ind:
          type: 'boolean'
        date_of_birth_mandatory:
          type: 'boolean'
        copy_party:
          type: 'boolean'
    relationshipToCaseLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: "#/components/schemas/relationshipToCaseLookupValueDetail"
    assessmentSummaryEntityLookupValueDetail:
      type: 'object'
      properties:
        name:
          type: 'string'
        display_name:
          type: 'string'
        entity_level:
          type: 'integer'
        attributes:
          type: 'array'
          items:
            $ref: "#/components/schemas/assessmentSummaryAttributeLookupValueDetail"
    assessmentSummaryAttributeLookupValueDetail:
      type: 'object'
      properties:
        name:
          type: 'string'
        display_name:
          type: 'string'
    assessmentSummaryEntityLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: "#/components/schemas/assessmentSummaryEntityLookupValueDetail"
    declarationLookupValueDetail:
      type: 'object'
      properties:
        type:
          type: 'string'
        bill_type:
          type: 'string'
        number:
          type: 'string'
        text:
          type: 'string'
    declarationLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: [ ]
          items:
            $ref: "#/components/schemas/declarationLookupValueDetail"
    providerRequestTypeLookupValueDetail:
      type: 'object'
      properties:
        type:
          type: 'string'
        name:
          type: 'string'
        is_case_related:
          type: 'boolean'
        additional_information_prompt:
          type: 'string'
        task_type_id:
          type: 'string'
        is_claim_upload_enabled:
          type: 'boolean'
        access_function_code:
          type: 'string'
        claim_upload_prompt:
          type: 'string'
        data_items:
          type: 'array'
          default: [ ]
          items:
            $ref: "#/components/schemas/providerRequestDataLookupValueDetail"
    providerRequestTypeLookupDetail:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: [ ]
          items:
            $ref: "#/components/schemas/providerRequestTypeLookupValueDetail"
    providerRequestDataLookupValueDetail:
      type: 'object'
      properties:
        code:
          type: 'string'
        label:
          type: 'string'
        type:
          type: 'string'
        mandatory_flag:
          type: 'boolean'
        sequence:
          type: 'string'
        lov_lookup_type:
          type: 'string'
    caseReferenceSummary:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
    notifications:
      allOf:
        - $ref: "#/components/schemas/page"
      type: object
      properties:
        content:
          type: array
          default: [ ]
          items:
            $ref: '#/components/schemas/notificationInfo'
    notificationInfo:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
        provider_case_reference_number:
          type: 'string'
        user:
          $ref: '#/components/schemas/userDetail'
        client_name:
          type: 'string'
        fee_earner:
          type: 'string'
        notification_id:
          type: 'string'
        provider_firm_id:
          type: 'string'
        subject:
          type: 'string'
        assign_date:
          type: 'string'
          format: date
        due_date:
          type: 'string'
          format: date
        notification_type:
          type: 'string'
        status:
          type: 'string'
        notification_open_indicator:
          type: 'boolean'
        evidence_allowed:
          type: 'boolean'

    notification:
      allOf:
        - $ref: "#/components/schemas/notificationInfo"
      type: object
      properties:
        evidence_allowed:
          type: 'boolean'
        notes:
          type: 'array'
          items:
            $ref: '#/components/schemas/note'
        attached_documents:
          type: 'array'
          items:
            $ref: '#/components/schemas/document'
        uploaded_documents:
          type: 'array'
          items:
            $ref: '#/components/schemas/document'
        available_responses:
          type: array
          items:
            type: 'string'
    note:
      type: 'object'
      properties:
        notes_id:
          type: 'string'
        user:
          $ref: '#/components/schemas/userDetail'
        date:
          type: 'string'
          format: date-time
        message:
          type: 'string'
    baseDocument:
      type: 'object'
      properties:
        document_type:
          type: 'string'
        file_extension:
          type: 'string'
        text:
          type: 'string'
    document:
      allOf:
        - $ref: "#/components/schemas/baseDocument"
      type: 'object'
      properties:
        document_id:
          type: 'string'
        title:
          type: 'string'
        channel:
          type: 'string'
        document_link:
          type: 'string'
        file_data:
          type: 'string'
        status:
          type: 'string'
        status_description:
          type: 'string'
    page:
      type: 'object'
      properties:
        total_pages:
          type: 'integer'
        total_elements:
          type: 'integer'
        number:
          type: 'integer'
        size:
          type: 'integer'

security:
  - ApiKeyAuth: []
